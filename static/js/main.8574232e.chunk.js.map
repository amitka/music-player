{"version":3,"sources":["assets/Give It Away.mp3","components/ExampleTrack/ExampleTrack.js","context/MusicPlayerContext.js","hooks/useReadFileAsync.js","hooks/useMusicPlayer.js","components/Playlist/Playlist.js","components/Player/Player.js","components/Record/Record.js","containers/MusicPlayer/MusicPlayer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ExampleTrack","name","sound","require","artist","album","pic","title","trackNo","year","MusicPlayerContext","React","createContext","DEFAULT_STATE","audioPlayer","Howl","src","tracks","currentTrackIndex","isPlaying","uiTheme","MusicPlayerProvider","props","_useState","useState","_useState2","Object","slicedToArray","state","setState","useEffect","objectSpread","react_default","a","createElement","Provider","value","children","Consumer","useReadFileAsync","_useContext","useContext","_useContext2","files","readFilesAsync","_useState3","_useState4","ready","setReady","updateTracks","all","concat","toConsumableArray","promiseArray","forEach","file","filePromise","Promise","resolve","reject","reader","FileReader","onload","result","onError","e","readAsDataURL","console","log","readFileAsync","then","catch","error","window","jsmediatags","read","onSuccess","tag","readMediaTagsAsync","tags","picture","track","useMusicPlayer","resetToDefault","_useReadFileAsync","selectTrack","index","stop","playTrack","togglePlay","play","pause","playNextTrack","length","on","off","clearAllTracks","unload","addTracks","newTracks","playPreviousTrack","tracksList","Playlist","_useMusicPlayer","fileInput","useRef","className","ref","type","onChange","selected","values","target","current","accept","multiple","onClick","map","key","style","opacity","classNames","onTrackSelected","Player","Record","MusicPlayer","Record_Record","Player_Player","Playlist_Playlist","App","MusicPlayerContext_MusicPlayerProvider","MusicPlayer_MusicPlayer","ReactDOM","render","src_App","document","getElementById"],"mappings":"uHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mPCC3BC,EAAe,CAC1BC,KAAM,eACNC,MAAOC,EAAQ,IACfC,OAAQ,uBACRC,MAAO,wBACPC,IAAK,GACLC,MAAO,eACPC,QAAS,IACTC,KAAM,QCLFC,EAAqBC,IAAMC,cAAc,CAAC,GAAI,aAAQ,eAEtDC,EAAgB,CACpBC,YAAa,IAAIC,OAAK,CAAEC,IAAK,CAAC,QAC9BC,OAAQ,GACRC,kBAAmB,EACnBC,WAAW,EACXC,QAAS,cAGLC,EAAsB,SAACC,GAAU,IAAAC,EACXC,mBAASX,GADEY,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BK,EAD8BH,EAAA,GACvBI,EADuBJ,EAAA,GAkBrC,OAfAK,oBACE,WACED,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GACTE,EADS,CAEZd,YAAa,IAAIC,OAAK,CAACC,IAAK,CAAEhB,EAAaE,SAC3Ce,OAAQ,CAAEjB,QAEX,IASHgC,EAAAC,EAAAC,cAACxB,EAAmByB,SAApB,CAA6BC,MAAO,CAACR,EAAOC,EAN9C,WAEEA,EAAShB,MAKLS,EAAMe,cAKc3B,EAAmB4B,eCpClCC,EAAmB,WAAM,IAAAC,EACVC,qBAAW/B,GADDgC,EAAAhB,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAC7BZ,EAD6Bc,EAAA,GACtBb,EADsBa,EAAA,GAAAnB,EAEJC,mBAAS,MAFLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE7BoB,EAF6BlB,EAAA,GAEtBmB,EAFsBnB,EAAA,GAAAoB,EAIVrB,oBAAS,GAJCsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAI7BE,EAJ6BD,EAAA,GAItBE,EAJsBF,EAAA,GAiDpC,SAASG,IACP,IAAMC,EAAG,GAAAC,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAQE,EAAMX,QAAdS,OAAA0B,EAAA,EAAA1B,CAAyBiB,IAClCd,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GAAQE,EAAR,CAAeX,OAAQiC,MA0CvC,OAtFApB,oBACE,WACE,GAAc,OAAVa,EAAgB,CAClBK,GAAS,GACT,IAAIK,EAAe,GACnBV,EAAMW,QAAQ,SAAAC,GAEZ,IAAMC,EAwCd,SAAuBD,GACrB,OAAO,IAAIE,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,WACdJ,EAAQE,EAAOG,SAGjBH,EAAOI,QAAU,SAACC,GAChBN,EAAOM,IAGT,IACEL,EAAOM,cAAcX,GAEvB,MAAMU,GACJE,QAAQC,IAAIH,MAxDUI,CAAcd,GAClCF,EAAY,GAAAF,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAO2B,GAAP,CAAqBG,IACjCA,EACGc,KAAK,SAAAP,GACJR,EAAKrD,MAAQ6D,EACbd,MAEDsB,MAAM,SAAAC,GAAK,OACVL,QAAQC,IAAI,4BAA8BI,KAqDtD,SAA4BjB,GAC1B,OAAO,IAAIE,QAAQ,SAACC,EAASC,GAC3B,IACEc,OAAOC,YAAYC,KAAKpB,EAAM,CAC5BqB,UAAW,SAASC,GAClBnB,EAAQmB,IAEVb,QAAS,SAASQ,GAChBb,EAAOa,MAIb,MAAOP,GACLE,QAAQC,IAAIH,MA/DUa,CAAmBvB,GAEpCe,KAAK,SAAAP,GAEJ,IAAMgB,EAAOhB,EAAOgB,KACpBxB,EAAKnD,OAAS2E,EAAK3E,OACnBmD,EAAKlD,MAAQ0E,EAAK1E,MAClBkD,EAAKjD,IAAMyE,EAAKC,QAChBzB,EAAKhD,MAAQwE,EAAKxE,MAClBgD,EAAK/C,QAAUuE,EAAKE,MACpB1B,EAAK9C,KAAOsE,EAAKtE,KACjBwC,QAINQ,QACGP,IAAIG,GACJiB,KAAK,SAAAP,GACJf,GAAS,OAGd,CAACL,IA+CC,CACLA,QACAC,iBAEAG,UC/FSmC,EAAiB,WAAM,IAAA1C,EACQC,qBAAW/B,GADnBgC,EAAAhB,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAC3BZ,EAD2Bc,EAAA,GACpBb,EADoBa,EAAA,GACVyC,EADUzC,EAAA,GAAA0C,EAEF7C,IAAzBK,EAF2BwC,EAE3BxC,eAAgBG,EAFWqC,EAEXrC,MAwCvB,SAASsC,EAAYC,GAEnB1D,EAAMd,YAAYyE,OAElB3D,EAAMd,YAAc,IAAIC,OAAK,CAACC,IAAK,CAAEY,EAAMX,OAAOqE,GAAOpF,SAEzD0B,EAAMT,UACJqE,EAAUF,GACVzD,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GAASE,EAAT,CAAgBV,kBAAkBoE,MAGpD,SAASE,EAAUF,GACbA,IAAU1D,EAAMV,kBAClBuE,KAEA7D,EAAMd,YAAY4E,OAElB7D,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GACTE,EADS,CAEZV,kBAAmBoE,EACnBnE,WAAW,OAMjB,SAASsE,IACH7D,EAAMT,UACRS,EAAMd,YAAY6E,QAElB/D,EAAMd,YAAY4E,OAEpB7D,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GAASE,EAAT,CAAgBT,WAAYS,EAAMT,cAUlD,SAASyE,IAEPP,GADkBzD,EAAMV,kBAAoB,GAAKU,EAAMX,OAAO4E,QAIhE,OArFA/D,oBACE,WAGMiB,IACFoB,QAAQC,IAAI,mBACZvC,EAAS,SAAAD,GAAK,OAAAF,OAAAK,EAAA,EAAAL,CAAA,GACTE,EADS,CAEZd,YAAa,IAAIC,OAAK,CAAEC,IAAK,CAACY,EAAMX,OAAO,GAAGf,SAC9CgB,kBAAmB,QAGtB,CAAC6B,IAGNjB,oBACE,WAIE,OAHIF,EAAMT,WACRS,EAAMd,YAAYgF,GAAG,MAAOF,GAEvB,WACLhE,EAAMd,YAAYiF,SAgEjB,CACLC,eA5DF,WACMpE,EAAMT,WAERS,EAAMd,YAAYmF,SAEpBd,KAwDAe,UArDF,SAAmBC,GACjBvD,EAAeuD,IAqDfX,YACAH,cACAI,aACAW,kBAjBF,WAEEf,IADmBzD,EAAMV,mBAAqB,GAAKU,EAAMX,OAAO4E,OAASjE,EAAMX,OAAO4E,QAAUjE,EAAMX,OAAO4E,SAiB7GD,gBACAS,WAAYzE,EAAMX,OAClBC,kBAAmBU,EAAMV,kBACzBC,UAAWS,EAAMT,4BCpGRmF,EAAW,WAAM,IAAAC,EAOxBrB,IALFc,EAF0BO,EAE1BP,eACAX,EAH0BkB,EAG1BlB,YACAa,EAJ0BK,EAI1BL,UACAG,EAL0BE,EAK1BF,WACAnF,EAN0BqF,EAM1BrF,kBAGIsF,EAAYC,mBAElB3E,oBACE,aAEG,IAcL,OACEE,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,sBACb1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,qBACb1E,EAAAC,EAAAC,cAAA,SACEyE,IAAMH,EACNI,KAAK,OACLC,SAbiB,SAAC5C,GACxB,IAAM6C,EAAWpF,OAAOqF,OAAO9C,EAAE+C,OAAOrE,OACxCuD,EAAUY,GAEVN,EAAUS,QAAQ7E,MAAQ,IAUpB8E,OAAO,4BACPC,UAAQ,IAEVnF,EAAAC,EAAAC,cAAA,UAAQkF,QAAUpB,GAAlB,SACAhE,EAAAC,EAAAC,cAAA,eAAAiB,OAAWkD,EAAWR,OAAtB,aAEF7D,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,oBACb1E,EAAAC,EAAAC,cAAA,UAEImE,EAAWgB,IAAI,SAACpC,EAAOK,GAAR,OACbtD,EAAAC,EAAAC,cAAA,MACEoF,IAAMhC,EACNiC,MAAQtC,EAAM/E,MAAQ,CAACsH,QAAS,KAAO,CAACA,QAAS,MACjDd,UAAYe,IAAW,aAAc,CAACX,SAAYxB,IAAUpE,IAC5DkG,QAAU,kBAhCA,SAAC9B,GACvBD,EAAYC,GA+BgBoC,CAAgBpC,KAEhCtD,EAAAC,EAAAC,cAAA,YAAQoD,EAAQ,GAChBtD,EAAAC,EAAAC,cAAA,YAAQ+C,EAAM1E,OAAS0E,EAAMhF,MAC7B+B,EAAAC,EAAAC,cAAA,YAAQ+C,EAAM7E,QACd4B,EAAAC,EAAAC,cAAA,YAAQ+C,EAAM5E,cCvDjBsH,SAAS,WAAM,IAAApB,EAOtBrB,IALFM,EAFwBe,EAExBf,UACAY,EAHwBG,EAGxBH,kBACAR,EAJwBW,EAIxBX,cACA1E,EALwBqF,EAKxBrF,kBACAC,EANwBoF,EAMxBpF,UAGF,OACEa,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,oBACb1E,EAAAC,EAAAC,cAAA,UAAQkF,QAAS,kBAAMhB,MAAvB,QACApE,EAAAC,EAAAC,cAAA,UAAQkF,QAAS,kBAAM5B,EAAUtE,KAC7BC,EAAY,QAAU,QAE1Ba,EAAAC,EAAAC,cAAA,UAAQkF,QAAS,kBAAMxB,MAAvB,WChBOgC,EAAS,WACpB,OACE5F,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,oBACb1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,eACb1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,cACb1E,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,iBCHRmB,SAAc,WAAM,IAAArF,EACfC,qBAAW/B,GAApBkB,EADwBF,OAAAC,EAAA,EAAAD,CAAAc,EAAA,MAG/B,OACER,EAAAC,EAAAC,cAAA,QAAMwE,UAAYA,IAAU,6BAAD,GAAAvD,OAAmCvB,EAAMR,WAClEY,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAC8F,EAAD,SCASC,SARH,WACV,OACEjG,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAACiG,EAAD,2BCDNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8574232e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Give It Away.5e65dfca.mp3\";","// DEMO SONG\nexport const ExampleTrack = {\n  name: \"Give it away\",\n  sound: require('../../assets/Give It Away.mp3'),\n  artist: \"Red Hot Chili Pepper\",\n  album: \"Blood Suger Sex Magik\",\n  pic: \"\",\n  title: \"Give It Away\",\n  trackNo: \"1\",\n  year: \"1989\"\n}","import React, { useState, useEffect } from 'react';\nimport { Howl } from 'howler';\nimport { ExampleTrack } from '../components/ExampleTrack';\n\nconst MusicPlayerContext = React.createContext([{}, ()=>{}, ()=>{}]);\n\nconst DEFAULT_STATE = {\n  audioPlayer: new Howl({ src: [null]}),\n  tracks: [],\n  currentTrackIndex: 0,\n  isPlaying: false,\n  uiTheme: 'dark-theme'\n}\n\nconst MusicPlayerProvider = (props) => {\n  const [state, setState] = useState(DEFAULT_STATE);\n\n  useEffect(\n    () => {\n      setState(state => ({\n        ...state,\n        audioPlayer: new Howl({src: [ ExampleTrack.sound ]}),\n        tracks: [ ExampleTrack ]\n      }))\n    }, []\n  )\n\n  function resetToDefault () {\n    // console.log('context says: reset ...')\n    setState(DEFAULT_STATE);\n  }\n\n  return (\n    <MusicPlayerContext.Provider value={[state, setState, resetToDefault]}>\n      { props.children }\n    </MusicPlayerContext.Provider>\n  )\n}\n\nconst MusicPlayerConsumer = MusicPlayerContext.Consumer;\n\nexport { \n  MusicPlayerContext,\n  MusicPlayerProvider,\n  MusicPlayerConsumer \n}","import { useState, useEffect, useContext } from 'react';\nimport { MusicPlayerContext } from '../context/MusicPlayerContext';\n\nexport const useReadFileAsync = () => {\n  const [state, setState] = useContext(MusicPlayerContext);\n  const [files, readFilesAsync] = useState(null);\n  //const [error, setError] = useState(null);\n  const [ready, setReady] = useState(false);\n  //const [loading, setLoading] = useState(false);\n\n  useEffect(\n    () => {\n      if (files !== null) {\n        setReady(false)\n        let promiseArray = []\n        files.forEach(file => {\n          // FILE READER\n          const filePromise = readFileAsync(file)\n          promiseArray = [...promiseArray, filePromise]\n          filePromise\n            .then(result => {\n              file.sound = result;\n              updateTracks()\n            })\n            .catch(error =>\n              console.log('useReadFileAsync error...' + error)\n            )\n          // MEDIA TAGS READER \n          const tagsPromise = readMediaTagsAsync(file)\n          tagsPromise\n            .then(result => {\n              //console.log(result)\n              const tags = result.tags\n              file.artist = tags.artist\n              file.album = tags.album\n              file.pic = tags.picture\n              file.title = tags.title\n              file.trackNo = tags.track\n              file.year = tags.year\n              updateTracks()\n            })\n        });\n\n        Promise\n          .all(promiseArray)\n          .then(result => {\n            setReady(true)\n          })\n      }\n    }, [files]\n  )\n  \n  function updateTracks() {\n    const all = [ ...state.tracks, ...files] \n    setState(state=> ({...state, tracks: all}))\n  }\n\n  function readFileAsync(file) {\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n  \n      reader.onload = () => {\n        resolve(reader.result);\n      };\n  \n      reader.onError = (e) => {\n        reject(e)\n      }\n\n      try {\n        reader.readAsDataURL(file);\n      }\n      catch(e) {\n        console.log(e)\n      }\n    })\n  }\n\n  function readMediaTagsAsync(file) {\n    return new Promise((resolve, reject) => {\n      try {\n        window.jsmediatags.read(file, {\n          onSuccess: function(tag) {\n            resolve(tag);\n          },\n          onError: function(error) {\n            reject(error);\n          }\n        });\n      }\n      catch (e) {\n        console.log(e)\n      }\n    })\n  }\n  \n  return {\n    files,\n    readFilesAsync,\n    //error,\n    ready,\n    //loading\n  }\n}","import { useContext, useEffect } from 'react';\nimport { MusicPlayerContext } from '../context/MusicPlayerContext';\nimport { useReadFileAsync } from './useReadFileAsync';\nimport { Howl } from 'howler';\n\nexport const useMusicPlayer = () => {\n  const [state, setState, resetToDefault] = useContext(MusicPlayerContext);\n  const {readFilesAsync, ready} = useReadFileAsync();\n  \n  useEffect(\n    () => {\n      // LOAD FIRST TRACK WHEN ...\n      // ... ALL TRACKS ARE READY !\n      if (ready) {\n        console.log('Ready to play !')\n        setState(state=>({\n          ...state,\n          audioPlayer: new Howl({ src: [state.tracks[0].sound]}),\n          currentTrackIndex: 0\n        }))\n      }\n    }, [ready]\n  )\n  \n  useEffect(\n    () => {\n      if (state.isPlaying) {\n        state.audioPlayer.on('end', playNextTrack)\n      }\n      return () => {\n        state.audioPlayer.off()\n      }\n    }\n  )\n\n  function clearAllTracks() {\n    if (state.isPlaying) {\n      // STOP ALL SOUNDS - REMOVE FROM CACHE\n      state.audioPlayer.unload()\n    }\n    resetToDefault()\n  }\n\n  function addTracks(newTracks) {\n    readFilesAsync(newTracks);\n  }\n\n  function selectTrack(index) {\n    // STOP PLAYING\n    state.audioPlayer.stop();\n    // NEW TRACK\n    state.audioPlayer = new Howl({src: [ state.tracks[index].sound ]})\n    //\n    state.isPlaying \n    ? playTrack(index)\n    : setState(state => ({...state, currentTrackIndex:index})); \n  }\n\n  function playTrack(index) {\n    if (index === state.currentTrackIndex) {\n      togglePlay();\n    } else {\n      state.audioPlayer.play();\n      //\n      setState(state => ({ \n        ...state,\n        currentTrackIndex: index,\n        isPlaying: true \n      }));\n    }\n  }\n\n  // Toggle play or pause\n  function togglePlay() {\n    if (state.isPlaying) {\n      state.audioPlayer.pause();\n    } else {\n      state.audioPlayer.play();\n    }\n    setState(state => ({...state, isPlaying: !state.isPlaying}));\n  }\n  \n  // Play the previous track in the tracks array\n  function playPreviousTrack() {\n    const newIndex = ((state.currentTrackIndex + -1) % state.tracks.length + state.tracks.length) % state.tracks.length;\n    selectTrack(newIndex);\n  }\n\n  // Play the next track in the tracks array\n  function playNextTrack() {\n    const newIndex = (state.currentTrackIndex + 1) % state.tracks.length;\n    selectTrack(newIndex);\n  }\n\n  return {\n    clearAllTracks,\n    addTracks,\n    playTrack,\n    selectTrack,\n    togglePlay,\n    playPreviousTrack,\n    playNextTrack,\n    tracksList: state.tracks,\n    currentTrackIndex: state.currentTrackIndex,\n    isPlaying: state.isPlaying\n  }\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useMusicPlayer } from '../../hooks/useMusicPlayer';\nimport classNames from 'classnames';\n\nexport const Playlist = () => {\n  const {\n    clearAllTracks,\n    selectTrack,\n    addTracks,\n    tracksList,\n    currentTrackIndex\n  } = useMusicPlayer();\n  \n  const fileInput = useRef();\n\n  useEffect(\n    () => {\n       // console.log('Playlist loaded...');\n    }, []\n  );\n  \n  const onTrackSelected = (index) => {\n    selectTrack(index);\n  }\n\n  const handleUserSelect = (e) => {\n    const selected = Object.values(e.target.files);\n    addTracks(selected);\n    // RESET FILE INPUT - ALLOW TO LOAD THE SAME FILES OVER\n    fileInput.current.value = \"\";\n  }\n\n  return (\n    <div className=\"playlist-container\">\n      <div className=\"toolbar-container\">\n        <input\n          ref={ fileInput } \n          type=\"file\"\n          onChange= { handleUserSelect }\n          accept=\".mp3,.m4a,.wav,.wma,.aiff\"\n          multiple  \n        />\n        <button onClick={ clearAllTracks }>Clear</button>\n        <span>{ `${tracksList.length} tracks` }</span>\n      </div>\n      <div className=\"tracks-container\">\n        <ul>\n          {\n            tracksList.map((track, index)=>(\n              <li \n                key={ index }\n                style={ track.sound ? {opacity: '1'} : {opacity: '.5'} }\n                className={ classNames(\"track-item\", {'selected': index === currentTrackIndex}) }\n                onClick={ () => onTrackSelected(index) }\n              >\n                <span>{ index + 1 }</span>\n                <span>{ track.title || track.name }</span>\n                <span>{ track.artist }</span>\n                <span>{ track.album }</span>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { useMusicPlayer } from '../../hooks/useMusicPlayer';\n\nexport const Player = () => {\n  const {\n    playTrack,\n    playPreviousTrack,\n    playNextTrack,\n    currentTrackIndex,\n    isPlaying\n  } = useMusicPlayer();\n\n  return (\n    <div className=\"player-container\">\n      <button onClick={() => playPreviousTrack() }>Prev</button>\n      <button onClick={() => playTrack(currentTrackIndex) }>\n        { isPlaying ? \"Pause\" : \"Play\"}\n      </button>\n      <button onClick={() => playNextTrack() }>Next</button>\n    </div>\n  )\n}","import React from 'react';\n\nexport const Record = () => {\n  return (\n    <div className=\"record-container\">\n      <div className=\"record-base\">\n        <div className=\"record-lbl\">\n          <img />\n        </div>\n      </div>\n      <div className=\"record-pin\"></div>\n    </div>\n  )\n}","import React, { useContext } from 'react';\nimport { Playlist } from '../../components/Playlist';\nimport { Player } from '../../components/Player';\nimport { Record } from '../../components/Record';\nimport { MusicPlayerContext } from '../../context/MusicPlayerContext';\nimport className from 'classnames';\n\nexport const MusicPlayer = () => {\n  const [state] = useContext(MusicPlayerContext);\n\n  return (\n    <main className={ className(\"music-player app-container\", `${ state.uiTheme }`) }>\n      <Record />\n      <Player />\n      <Playlist />\n    </main>\n  )\n}","import React from 'react';\nimport { MusicPlayerProvider } from './context/MusicPlayerContext';\nimport { MusicPlayer } from './containers/MusicPlayer';\n\n//import './App.css';  \n\nconst App = () => {\n  return (\n    <MusicPlayerProvider>\n      <MusicPlayer />\n    </MusicPlayerProvider>  \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './style/reset.css';\nimport './style/shared.scss';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}